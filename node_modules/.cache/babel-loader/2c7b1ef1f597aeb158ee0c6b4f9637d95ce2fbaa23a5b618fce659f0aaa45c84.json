{"ast":null,"code":"var _jsxFileName = \"/home/debosmitabedajna/Desktop/astrotrack/src/App.js\",\n  _s = $RefreshSig$();\nimport earthmap1k from './earthmap1k.jpg';\nimport earthbump1k from './earthbump1k.jpg';\nimport earthcloudmap from './earthcloudmap.jpg';\nimport moonmap1k from './moonmap1k.jpg';\nimport moonbump1k from './moonbump1k.jpg';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchSatellites() {\n  const response = await fetch('https://celestrak.com/NORAD/elements/gp.php?GROUP=active&FORMAT=json');\n  const data = await response.json();\n  console.log(\"Satellite data:\", data);\n  return data;\n}\nfunction SpinningGlobe() {\n  _s();\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const textRef = useRef();\n  const [satellites, setSatellites] = useState([]);\n  useEffect(() => {\n    fetchSatellites().then(data => setSatellites(data)).catch(err => console.error(\"Failed to fetch satellites:\", err));\n  }, []);\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n  });\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n  function getSatellitePositions() {\n    return satellites.map((sat, index) => {\n      const latitude = Math.random() * Math.PI - Math.PI / 2;\n      const longitude = Math.random() * 2 * Math.PI;\n      const radius = 3.5;\n      const x = radius * Math.cos(latitude) * Math.cos(longitude);\n      const y = radius * Math.sin(latitude);\n      const z = radius * Math.cos(latitude) * Math.sin(longitude);\n      return {\n        x,\n        y,\n        z\n      };\n    });\n  }\n  const satellitePositions = getSatellitePositions();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      ref: globeRef,\n      args: [2, 32, 32],\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        map: earthTexture,\n        bumpMap: bumpMap,\n        bumpScale: 0.05,\n        metalness: 0.5,\n        roughness: 0.7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: cloudRef,\n      args: [2.05, 32, 32],\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        attach: \"material\",\n        map: cloudMap,\n        transparent: true,\n        opacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: moonRef,\n      args: [1, 32, 32],\n      position: [12, 0, 0],\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        map: moonTexture,\n        bumpMap: moonBumpMap,\n        bumpScale: 0.02\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), satellitePositions.map((pos, index) => /*#__PURE__*/_jsxDEV(Sphere, {\n      args: [0.05, 2, 2],\n      position: [pos.x, pos.y, pos.z],\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        attach: \"material\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Text, {\n      ref: textRef,\n      position: [5, 2, 0],\n      fontSize: 1,\n      color: \"white\",\n      anchorX: \"right\",\n      children: \"AstroTalk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n_s(SpinningGlobe, \"8TTSzO9xuIJ9/85Hw2z7rRz2i80=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [5, 5, 5],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [-5, -5, -5],\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 100,\n      depth: 50,\n      count: 5000,\n      factor: 7,\n      saturation: 0,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinningGlobe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningGlobe\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["earthmap1k","earthbump1k","earthcloudmap","moonmap1k","moonbump1k","React","useRef","useState","useEffect","Canvas","useFrame","OrbitControls","Sphere","Stars","Text","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchSatellites","response","fetch","data","json","console","log","SpinningGlobe","_s","globeRef","cloudRef","moonRef","textRef","satellites","setSatellites","then","catch","err","error","current","rotation","y","position","x","Math","sin","Date","now","z","cos","earthTexture","TextureLoader","load","bumpMap","cloudMap","moonTexture","moonBumpMap","getSatellitePositions","map","sat","index","latitude","random","PI","longitude","radius","satellitePositions","children","ref","args","scale","attach","bumpScale","metalness","roughness","fileName","_jsxFileName","lineNumber","columnNumber","transparent","opacity","pos","color","fontSize","anchorX","_c","App","camera","fov","intensity","depth","count","factor","saturation","fade","_c2","$RefreshReg$"],"sources":["/home/debosmitabedajna/Desktop/astrotrack/src/App.js"],"sourcesContent":["import earthmap1k from './earthmap1k.jpg';\nimport earthbump1k from './earthbump1k.jpg';\nimport earthcloudmap from './earthcloudmap.jpg';\nimport moonmap1k from './moonmap1k.jpg';\nimport moonbump1k from './moonbump1k.jpg';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars,Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./App.css\";\n\nasync function fetchSatellites() {\n  const response = await fetch('https://celestrak.com/NORAD/elements/gp.php?GROUP=active&FORMAT=json');\n  const data = await response.json();\n  console.log(\"Satellite data:\", data); \n  return data;\n}\n\nfunction SpinningGlobe() {\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const textRef = useRef();\n  const [satellites, setSatellites] = useState([]);\n\n  useEffect(() => {\n    fetchSatellites().then(data => setSatellites(data)).catch(err => console.error(\"Failed to fetch satellites:\", err));\n  }, []);\n\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n  });\n\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n\n  function getSatellitePositions() {\n    return satellites.map((sat, index) => {\n      const latitude = Math.random() * Math.PI - Math.PI / 2;\n      const longitude = Math.random() * 2 * Math.PI; \n\n      const radius = 3.5; \n      const x = radius * Math.cos(latitude) * Math.cos(longitude);\n      const y = radius * Math.sin(latitude);\n      const z = radius * Math.cos(latitude) * Math.sin(longitude);\n      \n      return { x, y, z };\n    });\n  }\n\n  const satellitePositions = getSatellitePositions();\n\n  return (\n    <>\n      <Sphere ref={globeRef} args={[2, 32, 32]} scale={1}>\n        <meshStandardMaterial\n          attach=\"material\"\n          map={earthTexture}\n          bumpMap={bumpMap}\n          bumpScale={0.05}\n          metalness={0.5}\n          roughness={0.7}\n        />\n      </Sphere>\n      <Sphere ref={cloudRef} args={[2.05, 32, 32]} scale={1}>\n        <meshBasicMaterial\n          attach=\"material\"\n          map={cloudMap}\n          transparent\n          opacity={0.3}\n        />\n      </Sphere>\n      <Sphere ref={moonRef} args={[1, 32, 32]} position={[12, 0, 0]} scale={1}>\n        <meshStandardMaterial\n          attach=\"material\"\n          map={moonTexture}\n          bumpMap={moonBumpMap}\n          bumpScale={0.02}\n        />\n      </Sphere>\n      {satellitePositions.map((pos, index) => (\n        <Sphere key={index} args={[0.05, 2, 2]} position={[pos.x, pos.y, pos.z]}>\n          <meshBasicMaterial attach=\"material\" color=\"red\" />\n        </Sphere>\n      ))}\n       <Text ref={textRef} position={[5, 2, 0]} fontSize={1} color=\"white\" anchorX=\"right\">\n  AstroTalk\n</Text>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[5, 5, 5]} intensity={1} />\n      <directionalLight position={[-5, -5, -5]} intensity={0.5} />\n      <Stars radius={100} depth={50} count={5000} factor={7} saturation={0} fade />\n      <OrbitControls />\n      <SpinningGlobe />\n    </Canvas>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}