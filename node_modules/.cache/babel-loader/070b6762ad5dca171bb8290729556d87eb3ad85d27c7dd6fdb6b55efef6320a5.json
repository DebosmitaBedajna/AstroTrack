{"ast":null,"code":"var _jsxFileName = \"/home/debosmitabedajna/Desktop/astrotrack/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpinningGlobe() {\n  _s();\n  const globeRef = useRef();\n\n  // Rotate the globe continuously\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01; // Adjust speed here\n    }\n  });\n\n  // Load texture maps\n  const earthTexture = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthmap1k.jpg');\n  const bumpMap = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthbump1k.jpg');\n  const specularMap = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthspec1k.jpg');\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: globeRef,\n    args: [2, 32, 32],\n    scale: 1.5,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      map: earthTexture // Earth texture (color)\n      ,\n      bumpMap: bumpMap // Bump map for elevation\n      ,\n      bumpScale: 0.05 // Adjust bump scale to control elevation effect\n      ,\n      specularMap: specularMap // Specular map for water reflections\n      ,\n      metalness: 0.5 // Simulate reflective surfaces\n      ,\n      roughness: 0.7 // Control the roughness for a more realistic look\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(SpinningGlobe, \"KaSBWlc9yW4rDlRtg2nExqaJU/w=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [5, 5, 5],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 100,\n      depth: 50,\n      count: 5000,\n      factor: 7,\n      saturation: 0,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinningGlobe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningGlobe\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","OrbitControls","Sphere","Stars","THREE","jsxDEV","_jsxDEV","SpinningGlobe","_s","globeRef","current","rotation","y","earthTexture","TextureLoader","load","bumpMap","specularMap","ref","args","scale","children","attach","map","bumpScale","metalness","roughness","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","camera","position","fov","intensity","radius","depth","count","factor","saturation","fade","_c2","$RefreshReg$"],"sources":["/home/debosmitabedajna/Desktop/astrotrack/src/App.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./\"\n\nfunction SpinningGlobe() {\n  const globeRef = useRef();\n\n  // Rotate the globe continuously\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01; // Adjust speed here\n    }\n  });\n\n  // Load texture maps\n  const earthTexture = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthmap1k.jpg');\n  const bumpMap = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthbump1k.jpg');\n  const specularMap = new THREE.TextureLoader().load('https://planetpixelemporium.com/downloads/earthspec1k.jpg');\n\n  return (\n    <Sphere ref={globeRef} args={[2, 32, 32]} scale={1.5}>\n      <meshStandardMaterial\n        attach=\"material\"\n        map={earthTexture}             // Earth texture (color)\n        bumpMap={bumpMap}              // Bump map for elevation\n        bumpScale={0.05}               // Adjust bump scale to control elevation effect\n        specularMap={specularMap}      // Specular map for water reflections\n        metalness={0.5}                // Simulate reflective surfaces\n        roughness={0.7}                // Control the roughness for a more realistic look\n      />\n    </Sphere>\n  );\n}\n\nfunction App() {\n  return (\n    <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n      {/* Lighting */}\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[5, 5, 5]} intensity={1} />\n      {/* Stars in the background */}\n      <Stars radius={100} depth={50} count={5000} factor={7} saturation={0} fade />\n      {/* Orbit controls to rotate the scene */}\n      <OrbitControls />\n      {/* The spinning globe */}\n      <SpinningGlobe />\n    </Canvas>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}