{"ast":null,"code":"var _jsxFileName = \"/home/debosmitabedajna/Desktop/astrotrack/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpinningGlobe() {\n  _s();\n  const globeRef = useRef();\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: globeRef,\n    args: [2, 32, 32],\n    scale: 1.5,\n    children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: \"blue\",\n      wireframe: false,\n      map: new THREE.TextureLoader().load('https://upload.wikimedia.org/wikipedia/commons/2/28/Simple_globe_map.png')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(SpinningGlobe, \"KaSBWlc9yW4rDlRtg2nExqaJU/w=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [5, 5, 5],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinningGlobe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningGlobe\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","OrbitControls","Sphere","THREE","jsxDEV","_jsxDEV","SpinningGlobe","_s","globeRef","current","rotation","y","ref","args","scale","children","attach","color","wireframe","map","TextureLoader","load","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","camera","position","fov","intensity","_c2","$RefreshReg$"],"sources":["/home/debosmitabedajna/Desktop/astrotrack/src/App.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Sphere } from '@react-three/drei';\nimport * as THREE from 'three';\nimport \"./\"\n\n\nfunction SpinningGlobe() {\n  const globeRef = useRef();\n\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n  });\n\n  return (\n    <Sphere ref={globeRef} args={[2, 32, 32]} scale={1.5}>\n      <meshStandardMaterial\n        attach=\"material\"\n        color=\"blue\"\n        wireframe={false}\n        map={new THREE.TextureLoader().load('https://upload.wikimedia.org/wikipedia/commons/2/28/Simple_globe_map.png')}\n      />\n    </Sphere>\n  );\n}\n\nfunction App() {\n  return (\n    <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[5, 5, 5]} intensity={1} />\n      <OrbitControls />\n      <SpinningGlobe />\n    </Canvas>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,SAASC,aAAa,EAAEC,MAAM,QAAQ,mBAAmB;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGX,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,MAAM,CAAC,CAAC;EAEzBE,QAAQ,CAAC,MAAM;IACb,IAAIQ,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAI;IACrC;EACF,CAAC,CAAC;EAEF,oBACEN,OAAA,CAACH,MAAM;IAACU,GAAG,EAAEJ,QAAS;IAACK,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;IAACC,KAAK,EAAE,GAAI;IAAAC,QAAA,eACnDV,OAAA;MACEW,MAAM,EAAC,UAAU;MACjBC,KAAK,EAAC,MAAM;MACZC,SAAS,EAAE,KAAM;MACjBC,GAAG,EAAE,IAAIhB,KAAK,CAACiB,aAAa,CAAC,CAAC,CAACC,IAAI,CAAC,0EAA0E;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb;AAAClB,EAAA,CAnBQD,aAAa;EAAA,QAGpBN,QAAQ;AAAA;AAAA0B,EAAA,GAHDpB,aAAa;AAqBtB,SAASqB,GAAGA,CAAA,EAAG;EACb,oBACEtB,OAAA,CAACN,MAAM;IAAC6B,MAAM,EAAE;MAAEC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAAEC,GAAG,EAAE;IAAG,CAAE;IAAAf,QAAA,gBAC/CV,OAAA;MAAc0B,SAAS,EAAE;IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCpB,OAAA;MAAkBwB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACE,SAAS,EAAE;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDpB,OAAA,CAACJ,aAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBpB,OAAA,CAACC,aAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEb;AAACO,GAAA,GATQL,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}