{"ast":null,"code":"var _jsxFileName = \"/home/debosmitabedajna/Desktop/astrotrack/src/App.js\",\n  _s = $RefreshSig$();\nimport earthmap1k from './earthmap1k.jpg';\nimport earthbump1k from './earthbump1k.jpg';\nimport earthcloudmap from './earthcloudmap.jpg';\nimport moonmap1k from './moonmap1k.jpg';\nimport moonbump1k from './moonbump1k.jpg';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame, extend } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport axios from 'axios';\nimport \"./App.css\";\n\n// Import the Text component from @react-three/drei\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nextend({\n  Text\n});\nfunction SpinningGlobe() {\n  _s();\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const satelliteRef = useRef([]);\n  const [satelliteData, setSatelliteData] = useState([]);\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n    satelliteRef.current.forEach((satellite, index) => {\n      const satrec = satellite.satrec;\n      const position = satellite.position;\n      const now = new Date();\n      const positionEci = satellite.positionFromTLE(satrec, now);\n      const positionGd = satellite.eciToGeodetic(positionEci, now);\n      satellite.position.set(positionGd.longitude * 111.32, positionGd.latitude * 111.32, positionGd.altitude * 1000);\n    });\n  });\n  useEffect(() => {\n    axios.get('https://celestrak.com/NORAD/elements/tle-latest.txt').then(response => {\n      const lines = response.data.split('\\n');\n      const tleData = [];\n      for (let i = 0; i < lines.length; i += 3) {\n        tleData.push({\n          name: lines[i],\n          tle1: lines[i + 1],\n          tle2: lines[i + 2]\n        });\n      }\n      setSatelliteData(tleData);\n    }).catch(error => {\n      console.error('Error fetching satellite data:', error);\n    });\n  }, []);\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      ref: globeRef,\n      args: [2, 32, 32],\n      scale: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: cloudRef,\n      args: [2.05, 32, 32],\n      scale: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: moonRef,\n      args: [1, 10, 10],\n      scale: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      position: [-3, 2, 0],\n      fontSize: 1,\n      color: \"white\",\n      anchorX: \"left\",\n      children: \"AstroTalk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), satelliteData.map((satellite, index) => /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: ref => {\n        satelliteRef.current[index] = ref;\n      },\n      args: [0.1, 8, 8],\n      scale: 1,\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(SpinningGlobe, \"qa13edx28rRARY3xQksLsKC/b0k=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0, 0, 5],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [5, 5, 5],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [-5, -5, -5],\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 100,\n      depth: 50,\n      count: 5000,\n      factor: 7,\n      saturation: 0,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpinningGlobe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningGlobe\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["earthmap1k","earthbump1k","earthcloudmap","moonmap1k","moonbump1k","React","useRef","useState","useEffect","Canvas","useFrame","extend","OrbitControls","Sphere","Stars","Text","THREE","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SpinningGlobe","_s","globeRef","cloudRef","moonRef","satelliteRef","satelliteData","setSatelliteData","current","rotation","y","position","x","Math","sin","Date","now","z","cos","forEach","satellite","index","satrec","positionEci","positionFromTLE","positionGd","eciToGeodetic","set","longitude","latitude","altitude","get","then","response","lines","data","split","tleData","i","length","push","name","tle1","tle2","catch","error","console","earthTexture","TextureLoader","load","bumpMap","cloudMap","moonTexture","moonBumpMap","children","ref","args","scale","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","anchorX","map","_c","App","camera","fov","intensity","radius","depth","count","factor","saturation","fade","_c2","$RefreshReg$"],"sources":["/home/debosmitabedajna/Desktop/astrotrack/src/App.js"],"sourcesContent":["import earthmap1k from './earthmap1k.jpg';\nimport earthbump1k from './earthbump1k.jpg';\nimport earthcloudmap from './earthcloudmap.jpg';\nimport moonmap1k from './moonmap1k.jpg';\nimport moonbump1k from './moonbump1k.jpg';\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame, extend } from '@react-three/fiber';\nimport { OrbitControls, Sphere, Stars, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport axios from 'axios';\nimport \"./App.css\";\n\n// Import the Text component from @react-three/drei\nextend({ Text });\n\nfunction SpinningGlobe() {\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const satelliteRef = useRef([]);\n  const [satelliteData, setSatelliteData] = useState([]);\n\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n\n    satelliteRef.current.forEach((satellite, index) => {\n      const satrec = satellite.satrec;\n      const position = satellite.position;\n      const now = new Date();\n      const positionEci = satellite.positionFromTLE(satrec, now);\n      const positionGd = satellite.eciToGeodetic(positionEci, now);\n      satellite.position.set(positionGd.longitude * 111.32, positionGd.latitude * 111.32, positionGd.altitude * 1000);\n    });\n  });\n\n  useEffect(() => {\n    axios.get('https://celestrak.com/NORAD/elements/tle-latest.txt')\n      .then(response => {\n        const lines = response.data.split('\\n');\n        const tleData = [];\n        for (let i = 0; i < lines.length; i += 3) {\n          tleData.push({\n            name: lines[i],\n            tle1: lines[i + 1],\n            tle2: lines[i + 2]\n          });\n        }\n        setSatelliteData(tleData);\n      })\n      .catch(error => {\n        console.error('Error fetching satellite data:', error);\n      });\n  }, []);\n\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n\n  return (\n    <>\n      <Sphere ref={globeRef} args={[2, 32, 32]} scale={1}>\n        {/* ... */}\n      </Sphere>\n      <Sphere ref={cloudRef} args={[2.05, 32, 32]} scale={1}>\n        {/* ... */}\n      </Sphere>\n      <Sphere ref={moonRef} args={[1, 10, 10]} scale={1}>\n        {/* ... */}\n      </Sphere>\n      <Text position={[-3, 2, 0]} fontSize={1} color=\"white\" anchorX=\"left\">\n        AstroTalk\n      </Text>\n      {satelliteData.map((satellite, index) => (\n        <Sphere key={index} ref={(ref) => { satelliteRef.current[index] = ref; }} args={[0.1, 8, 8]} scale={1}>\n          <meshBasicMaterial color=\"blue\" />\n        </Sphere>\n      ))}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[5, 5, 5]} intensity={1} />\n      <directionalLight position={[-5, -5, -5]} intensity={0.5} />\n      <Stars radius={100} depth={50} count={5000} factor={7} saturation={0} fade />\n      <OrbitControls />\n      <SpinningGlobe />\n    </Canvas>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}