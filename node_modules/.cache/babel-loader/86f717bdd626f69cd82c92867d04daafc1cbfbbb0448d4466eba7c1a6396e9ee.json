{"ast":null,"code":"var _jsxFileName = \"/home/debosmitabedajna/Desktop/astrotrack/src/SpinningGlobe.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useFrame } from 'react';\nimport { Sphere, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport earthmap1k from './components/earthmap1k.jpg';\nimport earthbump1k from './components/earthbump1k.jpg';\nimport earthcloudmap from './components/earthcloudmap.jpg';\nimport moonmap1k from './components/moonmap1k.jpg';\nimport moonbump1k from './components/moonbump1k.jpg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchSatellites() {\n  const response = await fetch('https://celestrak.com/NORAD/elements/gp.php?GROUP=active&FORMAT=json');\n  const data = await response.json();\n  return data;\n}\nfunction SpinningGlobe() {\n  _s();\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const [satellites, setSatellites] = useState([]);\n  useEffect(() => {\n    fetchSatellites().then(setSatellites).catch(console.error);\n  }, []);\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n  });\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n  const satellitePositions = satellites.map(() => {\n    const latitude = Math.random() * Math.PI - Math.PI / 2;\n    const longitude = Math.random() * 2 * Math.PI;\n    const radius = 3.5;\n    return {\n      x: radius * Math.cos(latitude) * Math.cos(longitude),\n      y: radius * Math.sin(latitude),\n      z: radius * Math.cos(latitude) * Math.sin(longitude)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      ref: globeRef,\n      args: [2, 32, 32],\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: earthTexture,\n        bumpMap: bumpMap,\n        bumpScale: 0.05\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: cloudRef,\n      args: [2.05, 32, 32],\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: cloudMap,\n        transparent: true,\n        opacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      ref: moonRef,\n      args: [1, 32, 32],\n      position: [12, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: moonTexture,\n        bumpMap: moonBumpMap,\n        bumpScale: 0.02\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), satellitePositions.map((pos, index) => /*#__PURE__*/_jsxDEV(Sphere, {\n      args: [0.05, 2, 2],\n      position: [pos.x, pos.y, pos.z],\n      children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Text, {\n      position: [5, 10, 26],\n      fontSize: 1,\n      color: \"white\",\n      fontWeight: \"bold\",\n      children: \"AstroTrack\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SpinningGlobe, \"aotoaGrig2RPC+PbaPAIhIf2A2Y=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningGlobe;\nexport default SpinningGlobe;\nvar _c;\n$RefreshReg$(_c, \"SpinningGlobe\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useFrame","Sphere","Text","THREE","earthmap1k","earthbump1k","earthcloudmap","moonmap1k","moonbump1k","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchSatellites","response","fetch","data","json","SpinningGlobe","_s","globeRef","cloudRef","moonRef","satellites","setSatellites","then","catch","console","error","current","rotation","y","position","x","Math","sin","Date","now","z","cos","earthTexture","TextureLoader","load","bumpMap","cloudMap","moonTexture","moonBumpMap","satellitePositions","map","latitude","random","PI","longitude","radius","children","ref","args","bumpScale","fileName","_jsxFileName","lineNumber","columnNumber","transparent","opacity","pos","index","color","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["/home/debosmitabedajna/Desktop/astrotrack/src/SpinningGlobe.js"],"sourcesContent":["\nimport React, { useRef, useState, useEffect, useFrame  } from 'react';\nimport { Sphere, Text } from '@react-three/drei';\nimport * as THREE from 'three';\nimport earthmap1k from './components/earthmap1k.jpg';\nimport earthbump1k from './components/earthbump1k.jpg';\nimport earthcloudmap from './components/earthcloudmap.jpg';\nimport moonmap1k from './components/moonmap1k.jpg';\nimport moonbump1k from './components/moonbump1k.jpg';\n\nasync function fetchSatellites() {\n  const response = await fetch('https://celestrak.com/NORAD/elements/gp.php?GROUP=active&FORMAT=json');\n  const data = await response.json();\n  return data;\n}\n\nfunction SpinningGlobe() {\n  const globeRef = useRef();\n  const cloudRef = useRef();\n  const moonRef = useRef();\n  const [satellites, setSatellites] = useState([]);\n\n  useEffect(() => {\n    fetchSatellites().then(setSatellites).catch(console.error);\n  }, []);\n\n  useFrame(() => {\n    if (globeRef.current) {\n      globeRef.current.rotation.y += 0.01;\n    }\n    if (cloudRef.current) {\n      cloudRef.current.rotation.y += 0.015;\n    }\n    if (moonRef.current) {\n      moonRef.current.position.x = Math.sin(Date.now() / 1000) * 12;\n      moonRef.current.position.z = Math.cos(Date.now() / 1000) * 12;\n    }\n  });\n\n  const earthTexture = new THREE.TextureLoader().load(earthmap1k);\n  const bumpMap = new THREE.TextureLoader().load(earthbump1k);\n  const cloudMap = new THREE.TextureLoader().load(earthcloudmap);\n  const moonTexture = new THREE.TextureLoader().load(moonmap1k);\n  const moonBumpMap = new THREE.TextureLoader().load(moonbump1k);\n\n  const satellitePositions = satellites.map(() => {\n    const latitude = Math.random() * Math.PI - Math.PI / 2;\n    const longitude = Math.random() * 2 * Math.PI;\n    const radius = 3.5;\n    return {\n      x: radius * Math.cos(latitude) * Math.cos(longitude),\n      y: radius * Math.sin(latitude),\n      z: radius * Math.cos(latitude) * Math.sin(longitude),\n    };\n  });\n\n  return (\n    <>\n      <Sphere ref={globeRef} args={[2, 32, 32]}>\n        <meshStandardMaterial map={earthTexture} bumpMap={bumpMap} bumpScale={0.05} />\n      </Sphere>\n      <Sphere ref={cloudRef} args={[2.05, 32, 32]}>\n        <meshBasicMaterial map={cloudMap} transparent opacity={0.3} />\n      </Sphere>\n      <Sphere ref={moonRef} args={[1, 32, 32]} position={[12, 0, 0]}>\n        <meshStandardMaterial map={moonTexture} bumpMap={moonBumpMap} bumpScale={0.02} />\n      </Sphere>\n      {satellitePositions.map((pos, index) => (\n        <Sphere key={index} args={[0.05, 2, 2]} position={[pos.x, pos.y, pos.z]}>\n          <meshBasicMaterial color=\"red\" />\n        </Sphere>\n      ))}\n      <Text position={[5, 10, 26]} fontSize={1} color=\"white\" fontWeight=\"bold\">\n        AstroTrack\n      </Text>\n    </>\n  );\n}\n\nexport default SpinningGlobe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}